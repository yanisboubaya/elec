//code qui ne marche pas seul à tester avec le reste du programme


#include <EEPROM.h>  //mémoire
#include <NewPing.h>  //bibli qui envoie des impulsions au capteur à ultrasons pour verifier que l'alarme est tjs allumé
#define EEPROM_ADDRESS 0 // Adresse de départ dans la mémoire EEPROM
#define D? 9 // Broche de déclenchement du capteur, mettre les num de pin 
#define R?     10 // Broche de réception du capteur
NewPing sonar(D, R);

unsigned long temps_debut = 0; // Initialisation à 0
bool reveilEteint = false;
//dans le reste du programme
  if (reveilActive && !reveilEteint) {
    
    unsigned long tempsFin = 0;

    while (sonar.ping_cm() > SEUIL_DISTANCE_SON_ARRET) { //seuil à determiner experimentalement
      delay(90); // Attendre 90 ms avant de vérifier à nouveau, exigence de l'énoncé
    }

    tempsFin = millis(); // Enregistrez le temps à l'arrêt du son
    unsigned long tempsEcoule = tempsFin - tempsDebut; // Calculez le temps écoulé

    // Enregistrez le temps écoulé dans la mémoire EEPROM
    EEPROMWriteLong(EEPROM_ADDRESS, tempsEcoule);

   
    // Réinitialisez les variables pour la prochaine utilisation
    alarmeActivee = false;
    alarmeEteinte = true;
  }


void effacerDonnees() {
  // Effacer les données dans la mémoire EEPROM
  EEPROMWriteLong(EEPROM_ADDRESS, 0);
  Serial.println("Données effacées.");
}

void consulterTemp() {
  Serial.println("Parcourir les temps enregistrés :");
  
  int address = EEPROM_ADDRESS;
  int index = 1; // Pour numéroter les temps enregistrés

  while (address + sizeof(unsigned long) <= EEPROM.length()) {
    unsigned long tempsEcoule = EEPROMReadLong(address);
    
    Serial.print("Temps ");
    Serial.print(index);
    Serial.print(" : ");
    Serial.println(tempsEcoule);

    address += sizeof(unsigned long);
    index++;
  }

  Serial.println("Fin des temps enregistrés.");
}
//Un unsigned long est un entier non signé de 32 bits, soit 4 octets. donc pour écrire dans la mémoire il enregistre les 4 octets d'ou les 4 lignes
// Fonction pour écrire une valeur long dans la mémoire EEPROM
void EEPROMWriteLong(int address, unsigned long value) {
  EEPROM.write(address, value & 0xFF);
  EEPROM.write(address + 1, (value >> 8) & 0xFF);
  EEPROM.write(address + 2, (value >> 16) & 0xFF);
  EEPROM.write(address + 3, (value >> 24) & 0xFF);
}

// Fonction pour lire une valeur long depuis la mémoire EEPROM
unsigned long EEPROMReadLong(int address) {
  return (unsigned long)EEPROM.read(address) |
         (unsigned long)EEPROM.read(address + 1) << 8 |
         (unsigned long)EEPROM.read(address + 2) << 16 |
         (unsigned long)EEPROM.read(address + 3) << 24;
}




