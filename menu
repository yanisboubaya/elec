#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include<Adafruit_SSD1306.h>
#include<LedControl.h>
#include<Encoder.h>
#include <toneAC.h>

// put function declarations here:
#define SCREEN_WIDTH 128
#define SCREENE_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH,SCREENE_HEIGHT,&Wire,-1);
Encoder myEncoder(3, 6); // Broches A et B de l'encodeur
LedControl lc = LedControl(12,13,10,4);

int etatled = 0 ;
int menu =0 ;
const int bouton =4;
const int bouton2 =7;
const int bouton3 =2 ;
const int led =5 ;
const int potentiometre= A0 ;
const int buzzer = 11 ;
bool reveilActive = false;

int valuepot;
int choix =0 ;
int a=1 ;
int b=2 ;
int heure =17 ;
int min = 42 ;
 int encoderValue ;

volatile bool playReveil = false;

//fonction permettant l'activation du réveil
void activationReveil() {
  reveilActive = !reveilActive;
  if (reveilActive) {
    digitalWrite(led, HIGH);
      if (a == heure&&b == min) {
        playReveil=true;

      }
  } else {
    digitalWrite(led, LOW);
      playReveil=false;
   
  }
}

void reveil(){
   if (playReveil) {
toneAC(buzzer, 659);  // E
  delay(150);
  notoneAC(buzzer);
  delay(50);

  toneAC(buzzer, 622);  // Eb
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneACAC(buzzer, 659);  // E
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneACAC(buzzer, 622);  // Eb
  delay(150);
  notoneACAC(buzzer);
  delay(150);

  toneAC(buzzer, 659);  // E
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneAC(buzzer, 494);  // B
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneAC(buzzer, 587);  // D
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneAC(buzzer, 523);  // C
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneAC(buzzer, 587);  // D
  delay(150);
  notoneAC(buzzer);
  delay(150);

  toneAC (buzzer,659);
  delay(150);
  notoneAC(buzzer);
   toneAC (buzzer,587);
  delay(150);
  notoneAC(buzzer);
   toneAC (buzzer,523);
  delay(150);
  notoneAC(buzzer);
   toneAC (buzzer,587);
  delay(150);
  notoneAC(buzzer);
  toneAC (buzzer,659);
  delay(150);
  notoneAC(buzzer);

   toneAC (buzzer,957);
  delay(150);
  notoneAC(buzzer);
   toneAC (buzzer,880);
  delay(150);
  notoneAC(buzzer);
   toneAC (buzzer,784);
  delay(150);
  notoneAC(buzzer);
   toneAC (buzzer,659);
  delay(150);
  notoneAC(buzzer);
  toneAC (buzzer,587);
  delay(150);
  notoneAC(buzzer);
  
 }
}
 


void setup() {
Serial.begin(115200);
pinMode(bouton,INPUT);
pinMode(bouton2,INPUT);
pinMode(bouton3,INPUT);
pinMode (led,OUTPUT);
pinMode (potentiometre,INPUT);
pinMode(buzzer,OUTPUT);
attachInterrupt(digitalPinToInterrupt(bouton3), activationReveil, RISING);


if (!display.begin(SSD1306_SWITCHCAPVCC,0x3c)){
  Serial.println(F("SSD1306_ allocation failed"));
  for(;;);
}
  display.display();
  delay(2000);
  display.clearDisplay();

for (int i = 0 ;i<4;i++){
  lc.shutdown(i, false);
  lc.setIntensity(i, 8);
  lc.clearDisplay(1);
}

}




void affichermenu(){
display.clearDisplay();
display.setTextSize(2);
display.setTextColor(WHITE);
display.setCursor(1,10);
int  etatbouton;
int  etatbouton2;
etatbouton=digitalRead(bouton);
etatbouton2=digitalRead(bouton2);
delay(100);
if (etatbouton==HIGH){
  menu++;
  choix =0;
}
if (menu == 0){
  display.println("MENU");
}
if (menu==1){
display.println("régler l'heure\n");
if (etatbouton2==HIGH){
choix++;
}
if (choix ==1){
encoderValue = myEncoder.read()/4 % 60; // Limiter la plage de valeurs de 0 à 59
  if (encoderValue < 0) {
    encoderValue += 60;
    min =encoderValue ;
  }
display.clearDisplay();
display.setCursor(0,10);
display.setTextSize(3);
display.print(heure);
display.print( " : " );
display.print(min);
  
}
if (choix ==2){
  encoderValue = myEncoder.read()/4 % 24; // Limiter la plage de valeurs de 0 à 59
  if (encoderValue < 0) {
    encoderValue += 24;
    heure=encoderValue ;
  }
display.clearDisplay();
display.setCursor(0,10);
display.setTextSize(3);
display.print(heure);
display.print( " : " );
display.print(min);
}
if (choix ==3){
  choix = 0;
}
}
if (menu==2){
  if (etatbouton2==HIGH){
choix++;
}
display.println("régler alarme");
if (choix ==1){
encoderValue = myEncoder.read()/4 % 60; // Limiter la plage de valeurs de 0 à 59
  if (encoderValue < 0) {
    encoderValue += 60;
    b =encoderValue ;
  }
display.clearDisplay();
display.setCursor(0,10);
display.setTextSize(3);
display.print(a);
display.print( " : " );
display.print(b);
}
if (choix ==2){
  encoderValue = myEncoder.read()/4 % 24; // Limiter la plage de valeurs de 0 à 59
  if (encoderValue < 0) {
    encoderValue += 24;
    a=encoderValue ;
  }
display.clearDisplay();
display.setCursor(0,10);
display.setTextSize(3);
display.print(a);
display.print( " : " );
display.print(b);
}
if (choix ==3){
  choix = 0;
}

}
if (menu ==3){
display.println("choisir l'affichage\n");
}
if (menu ==4 ){
  display.println("consulté temsp");
}
if (menu ==5 ){
  display.println("effacée temps");
}
if (menu ==6){
 menu=1;
}
display.display();

}

void loop() {


affichermenu();
reveil();
}







  



  

